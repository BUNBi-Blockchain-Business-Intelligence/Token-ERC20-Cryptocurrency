pragma solidity ^0.6.12;
//SPDX-License-Identidier: MIT
contract BUNBiCoin {
    
    // Variables 
//Estandar Tokens ERC-20
    string public name;
    string public symbol;
    uint8 public decimals;
    uint256 public totalSupply;
    
    mapping(address => uint256) public balanceOf;
    mapping(address => mapping(address => uint256)) public allowance;
    
    event Transfer (address indexed _from, address indexed _to, uint256 _value);
    event Approval (address indexed _Owner, address indexed _spender, uint256 _value);
    
    //constructor
    constructor (string memory _name, string memory _symbol, uint8 _decimals, uint256 _totalSupply) public {
      name = _name;
      symbol = _symbol;
      decimals = _decimals;
      totalSupply = _totalSupply;
      balanceOf[msg.sender] = _totalSupply;
    }
    //Metodos
    function transfer(address _to, uint256 _value) public returns (bool succes){
        require(balanceOf[msg.sender] >= _value, "No cuentas con suficientes fondos/ Not enough funds");
        balanceOf[msg.sender] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(msg.sender, _to, _value);
        return true;
    }
    function approve(address _spender, uint256 _value) public returns (bool succes){
        allowance[msg.sender][_spender] = _value;
        emit Approval(msg.sender, _spender, _value);
        return true;
    }
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool succes){
        require(allowance[_from][msg.sender] >= _value);
        require(balanceOf[_from] >= _value);
        balanceOf[_from] -= _value;
        allowance[_from][msg.sender] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(_from, _to, _value);
        return true;
    }
    
}
